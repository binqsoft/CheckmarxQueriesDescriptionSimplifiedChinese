Unvalidated_Forwards（未验证的转发）

风险
可能发生的情况
    未验证的转发可能允许攻击者绕开连接控制机制。攻击者通过简单地修改请求中目标方法的名称，就可能使应用程序在基于原始值的访问检查之后执行一个不同的方法，从而执行攻击者未被授权的一些行为。

起因
这样的情况是如何发生的
    应用程序使用转发在网站的不同部分发送路由请求。尤其是一些网页根据请求的参数来判断在初步处理之后应该执行哪一个服务器的方法。
    攻击者能够精心制作一个可以通过应用程序的连接管理检查的URL，然后被应用程序转发到攻击者未被授权的敏感功能。

常规建议
如何避免这样的情况
常规指导
    ＊如果可能，完全避免使用转发。
    ＊如果必须使用转发，不要基于用户输入的目标地。
    ＊如果需要通过用户的输入来计算目标，那么接受目标代码而不是方法名本身，并将服务器上的这代码映射到实际的URL中。
    ＊如果一定要允许用户提供一个任意的方法名（非常罕见），确保提供的数据是有效的，以及该用户有权调用这个方法。
特殊建议：
    ＊如果可能，完全避免使用服务端的转发。
    ＊在任何情况下，不要基于用户的输入来将服务器的执行操作转发到目标地。

源代码示例：
Java
有害的 － 用户控制转发的例子
if (user.isAuthenticated) {

    String target = request.getParameter("target"); 

    RequestDispatcher dispatcher = request.getRequestDispatcher(target);
    dispatcher.forward( request, response ); 
}

更多信息：http://cwe.mitre.org/data/definitions/819.html
