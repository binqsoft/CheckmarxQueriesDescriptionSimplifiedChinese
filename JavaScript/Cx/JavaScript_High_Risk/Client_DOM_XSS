Cient_DOM_XSS（客户端DOM跨站脚本攻击）

风险
可能发生的情况
    攻击者能够使用社会工程造成一个用户发送经过策划的输入（例如含有处理过的超链接的URL）给这个网站，重写网页页面。攻击者然后能够假装成这个原始网站，这将使攻击者能够窃取用户的密码、请求用户的信用卡信息、提供假信息、或运行恶意软件。从受害者的角度看，这就是原始的网站，受害者将会把遭受的损失归咎于这个网站。

起因
这样的情况是如何发生的
    这个应用程序的网页包含一些来自之前用户输入的数据（包括界面URL）。用户的输入被嵌入进这个页面，造成浏览器把它作为这个页面的一部分展示出来。如果输入包含HTML片段或者JavaScript，这些也被展示，并且用户不能辨别出这不是其所预期的网页。这个漏洞是嵌入任意用户输入而没有首先对它以一种格式进行编码的结果。这种编码行为将阻止浏览器把用户输入视为HTML而不是纯文本这种情况发生。

常规建议
如何避免这样的情况

    1. 校验所有输入，无论来源。校验应该基于一个白名单：仅接受符合特定结构的数据，而不是拒绝不合格的模式。检查如下内容：
        * 数据类型
        * 数据大小
        * 数据范围
        * 数据格式
        * 期待的一些值
    2. 在将动态数据嵌入到输出之前，对这些动态数据全部进行编码。编码应该是上下文相关的。例如：
        * 对HTML内容进行HTML编码
        * 对输出到属性值的数据进行HTML属性编码
        * 对服务器生成的JavaScript进行JavaScript编码
    3. 考虑使用ESAPI4JS编码库。

源代码示例
CSharp
对于JavaScript中动态创建的URL，使用OWASP ESAPI4JS库：
window.location = ESAPI4JS.encodeForURL(input);

对于JavaScript中动态创建的HTML，使用OWASP ESAPI4JS库：
window.location = ESAPI4JS.encodeForHTML(input);

Java
对于JavaScript中动态创建的URL，使用OWASP ESAPI4JS库：
window.location = ESAPI4JS.encodeForURL(input);

对于JavaScript中动态创建的HTML，使用OWASP ESAPI4JS库：
window.location = ESAPI4JS.encodeForHTML(input);

更多信息：http://cwe.mitre.org/data/definitions/79.html

